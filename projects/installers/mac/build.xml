<!-- project build configuration -->
<project name="Bang Mac Installer" default="devclient" basedir=".">

  <!-- load up our configuration information -->
  <property name="base.dir" value="../../.."/>
  <property file="${base.dir}/deployment.properties"/>
  <property file="${base.dir}/build.properties"/>
  <property name="web.home" value="${web_dir}/pages"/>
  <property name="jdir" value="Contents/Resources/Java"/>

  <property name="base.name" value="Bang Howdy"/>
  <property name="inst.dir" value="dist"/>
  <property name="img.dir" value="${inst.dir}/imgSrc"/>
  <property name="tmp.dmg" value="${inst.dir}/${base.name} TMP"/>
  <property name="rw.dmg" value="${inst.dir}/${base.name} RW"/>

  <!-- declare our classpath -->
  <path id="classpath">
    <fileset dir="${base.dir}/lib" includes="**/*.jar"/>
    <fileset dir="/export/tools/lib/java" includes="**/*.jar"/>
  </path>

  <taskdef name="jarbundler" classpathref="classpath"
    classname="com.loomcom.ant.tasks.jarbundler.JarBundler"/>

  <!-- clean the build -->
  <target name="clean">
     <delete dir="${inst.dir}"/>
  </target>

  <!-- creates the macintosh application -->
  <target name="app">
    <mkdir dir="${inst.dir}"/>
    <copy file="${base.dir}/projects/getdown/dist/getdown-pro.jar"
          todir="${inst.dir}"/>

    <jarbundler dir="${inst.dir}" name="${app_base.name}" 
      mainclass="com.threerings.getdown.launcher.Getdown" 
      workingdirectory="$APP_PACKAGE/Contents/Resources/Java"
      jars="${inst.dir}/getdown-pro.jar"
      vmoptions="-Dappdir=."
      version="1.0"
      infostring="${client_ident} ${version}"
      icon="desktop.icns"
      stubfile="JavaApplicationStub"/>

    <copy todir="${inst.dir}/${app.name}/${jdir}/">
      <fileset dir="../${default_locale}">
        <include name="background.png"/>
        <include name="progress.png"/>
      </fileset>
    </copy>

    <echo file="${inst.dir}/${app.name}/${jdir}/getdown.txt"
      message="appbase = ${root_url}/${bclient_ident}/${line.separator}"/>

    <!-- Prepare for imaging -->
    <mkdir dir="${img.dir}/.background"/>
    <copy todir="${img.dir}/.background/">
      <fileset dir=".">
        <include name="ypp_banner.png"/>
      </fileset>
    </copy>

    <copy todir="${img.dir}/">
       <fileset dir="${inst.dir}">
         <include name="${app.name}/**"/>
       </fileset>
    </copy>

    <!-- Fix permissions, no matter how silly the umask made them -->
    <exec executable="/bin/chmod">
      <arg line="-R"/>
      <arg line="u+w,go-w,a+r"/>
      <arg line="'${img.dir}'"/>
    </exec>
    <exec executable="/bin/chmod">
      <arg line="a+x"/>
      <arg line="'${img.dir}/${app.name}/Contents/MacOS/JavaApplicationStub'"/>
    </exec>
  </target>

  <!-- create a disk image -->
  <!-- the image will be blank if imgSrc has not been populated! -->
  <target name="image">

    <!-- Generate Read-Only image -->
    <exec executable="/usr/bin/hdiutil" failonerror="true">
      <arg line="create"/>
      <!-- Image source directory -->
      <arg line="-srcfolder"/>
      <arg file="${img.dir}"/>
      <!-- Volume name -->
      <arg line="-volname"/>
      <arg line="'${base.name}'"/>
      <!-- Output File (.dmg extension is automatically added) -->
      <arg file="${tmp.dmg}"/>
    </exec>

    <exec executable="/usr/bin/hdiutil" failonerror="true">
      <arg line="convert"/>
      <arg line="'${tmp.dmg}.dmg'"/>
      <arg line="-format"/>
      <arg line="UDRW"/>
      <arg line="-o"/>
      <arg line="'${rw.dmg}'"/>
    </exec>

    <delete file="${tmp.dmg}.dmg"/>
    <echo message="Read/Write disk image generated at"/>
    <echo message="${rw.dmg}.dmg"/>
    <echo message="Mounting the image. Add background artwork, position"/>
    <echo message="(center) and resize (96x96) the application icon, and"/>
    <echo message="then run the 'image-seal' target."/>
    <echo message="Be sure to eject the disk image when you're done!"/>
    <exec executable="/usr/bin/open" failonerror="true">
      <arg line="'${rw.dmg}.dmg'"/>
    </exec>
  </target>

  <target name="image-seal">
    <!-- Generate compressed read-only internet-enabled image from -->
    <!-- read-write image -->
    <exec executable="/usr/bin/hdiutil" failonerror="true">
      <arg line="convert"/>
      <arg line="'${rw.dmg}.dmg'"/>
      <arg line="-format"/>
      <arg line="UDRO"/>
      <arg line="-o"/>
      <arg line="'${tmp.dmg}'"/>
    </exec>

    <exec executable="/usr/bin/hdiutil" failonerror="true">
      <arg line="convert"/>
      <arg line="'${tmp.dmg}.dmg'"/>
      <arg line="-format"/>
      <arg line="UDZO"/>
      <arg line="-o"/>
      <arg line="'${inst.dir}/bang-install'"/>
    </exec>
    <delete file="${tmp.dmg}.dmg"/>

    <exec executable="/usr/bin/hdiutil" failonerror="true">
      <arg line="internet-enable"/>
      <arg line="'${inst.dir}/bang-install.dmg'"/>
    </exec>
  </target> 
  
  <!-- do the additional bits to make the full application -->
  <target name="makefull">
    <mkdir dir="${inst.dir}/${app.name}/${jdir}/code"/>
    <copy todir="${inst.dir}/${app.name}/${jdir}/code"> 
          <fileset dir="${web.home}/${bclient_ident}/${client_dir}/code"/>
    </copy>
    <copy todir="${inst.dir}/${app.name}/${jdir}/rsrc">
      <fileset dir="${web.home}/${bclient_ident}/${client_dir}/rsrc"/>
    </copy>
    <copy overwrite="true" todir="${inst.dir}/${app.name}/${jdir}/">
        <fileset dir="${web.home}/${bclient_ident}/${client_dir}">
          <include name="getdown.txt"/>
          <include name="digest.txt"/>
          <include name="background.png"/>
          <include name="progress.png"/>
        </fileset>
    </copy>
  </target>

  <!-- creates the devclient app -->
  <target name="devprops">
    <property name="bclient_ident" value="devclient"/>
    <property name="client_dir" value="client"/>
    <property name="app.name" value="Dev ${base.name}.app"/>
    <property name="app_base.name" value="Dev ${base.name}"/>
  </target>
  <target name="devclient" depends="devprops,app"/>
  <target name="devclient_full" depends="devprops,app,makefull"/>

  <!-- creates the client app -->
  <target name="props">
    <property name="bclient_ident" value="${client_ident}"/>
    <property name="client_dir" value="${version}"/>
    <property name="app.name" value="${base.name}.app"/>
    <property name="app_base.name" value="${base.name}"/>
  </target>
  <target name="yoclient" depends="props,app"/>
  <target name="yoclient_full" depends="props,app,makefull"/>

  <!-- creates the tclient installer -->
  <target name="tprops">
    <property name="bclient_ident" value="${client_ident}"/>
    <property name="client_dir" value="${version}"/>
    <property name="app.name" value="${base.name} Test.app"/>
    <property name="app_base.name" value="${base.name} Test"/>
  </target>
  <target name="tclient" depends="tprops,app"/>

</project>
