<!-- project build configuration -->
<project name="Bang Mac Installer" default="client" basedir=".">

  <!-- load up our configuration information -->
  <property name="deploy.dir" value="dist"/>
  <property name="base.dir" value="../../.."/>
  <property file="${base.dir}/${deploy.dir}/deployment.properties"/>
  <!-- needed for ${version} -->
  <property file="${base.dir}/${deploy.dir}/build.properties"/>
  <property name="jdir" value="Contents/Resources/Java"/>
  <property name="client.base" value="${base.dir}/${deploy.dir}/client/pages/client"/>

  <property name="app.name" value="${client_title}.app"/>
  <property name="ds_store" value="client_DS_Store"/>
  <property name="img.dir" value="${deploy.dir}/imgSrc"/>
  <property name="tmp.dmg" value="${deploy.dir}/${client_title} TMP"/>
  <property name="rw.dmg" value="${deploy.dir}/${client_title} RW"/>

  <!-- declare our classpath -->
  <path id="classpath">
    <fileset dir="${base.dir}/dist/lib" includes="**/*.jar"/>
  </path>

  <!-- clean the build -->
  <target name="clean">
     <delete dir="${deploy.dir}"/>
  </target>

  <!-- creates the macintosh application directory -->
  <target name="app">
    <mkdir dir="${deploy.dir}"/>
    <copy file="${basedir}/../data/getdown-pro.jar" todir="${deploy.dir}"/>

    <taskdef name="jarbundler" classpathref="classpath"
      classname="com.loomcom.ant.tasks.jarbundler.JarBundler"/>

    <jarbundler dir="${deploy.dir}" name="${client_title}" 
      mainclass="com.threerings.getdown.launcher.Getdown" 
      workingdirectory="$APP_PACKAGE/Contents/Resources/Java"
      jars="${basedir}/${deploy.dir}/getdown-pro.jar"
      vmoptions="-Dappdir=."
      version="1.0"
      jvmversion="1.5+"
      infostring="${client_ident} ${version}"
      icon="desktop.icns"
      stubfile="JavaApplicationStub"/>

    <copy todir="${deploy.dir}/${app.name}/${jdir}/">
      <fileset dir="../${default_locale}">
        <include name="background.png"/>
        <include name="progress.png"/>
      </fileset>
    </copy>

    <echo file="${deploy.dir}/${app.name}/${jdir}/getdown.txt"
      message="appbase = ${root_url}/${bclient_ident}/${line.separator}"/>

    <!-- Prepare for imaging -->
    <copy file="${ds_store}" tofile="${img.dir}/.DS_Store"/>
    <mkdir dir="${img.dir}/.background"/>
    <copy todir="${img.dir}/.background/" file="banner.png"/>

    <copy todir="${img.dir}/">
       <fileset dir="${deploy.dir}">
         <include name="${app.name}/**"/>
       </fileset>
    </copy>

    <!-- Fix permissions, no matter how silly the umask made them -->
    <exec executable="/bin/chmod">
      <arg line="-R"/>
      <arg line="u+w,go-w,a+r"/>
      <arg line="'${img.dir}'"/>
    </exec>
    <exec executable="/bin/chmod">
      <arg line="a+x"/>
      <arg line="'${img.dir}/${app.name}/Contents/MacOS/JavaApplicationStub'"/>
    </exec>
  </target>

  <!-- creates the disk image -->
  <target name="image">
    <exec executable="mkisofs" failonerror="true">
      <arg line="-hide-rr-moved"/>
      <arg line="-hide-joliet"/>
      <arg line=".rr_moved"/>
      <arg line="-uid"/>
      <arg line="0"/>
      <arg line="-gid"/>
      <arg line="0"/>
      <arg line="-J"/>
      <arg line="-V"/>
      <arg line="'${client_title}'"/>
      <arg line="-o"/>
      <arg line="'${deploy.dir}/bang-install.dmg'"/>
      <arg file="${img.dir}"/>
    </exec>
  </target> 

  <!-- do the additional bits to make the full application -->
  <target name="makefull">
    <mkdir dir="${deploy.dir}/${app.name}/${jdir}/code"/>
    <copy todir="${deploy.dir}/${app.name}/${jdir}/code"> 
          <fileset dir="${client_dir}/code"/>
    </copy>
    <copy todir="${deploy.dir}/${app.name}/${jdir}/rsrc">
      <fileset dir="${client_dir}/rsrc"/>
    </copy>
    <copy overwrite="true" todir="${deploy.dir}/${app.name}/${jdir}/">
        <fileset dir="${client_dir}">
          <include name="getdown.txt"/>
          <include name="digest.txt"/>
          <include name="background.png"/>
          <include name="progress.png"/>
        </fileset>
    </copy>
  </target>

  <target name="client" depends="app,image"/>

  <target name="client_full">
    <antcall target="app"/>
    <antcall target="makefull">
      <param name="client_dir" value="${client.base}/${version}"/>
    </antcall>
    <antcall target="image"/>
  </target>

  <target name="devclient_full">
    <antcall target="app"/>
    <antcall target="makefull">
      <param name="client_dir" value="${client.base}"/>
    </antcall>
    <antcall target="image"/>
  </target>
</project>
