#!/bin/sh
#
# $Id$
#
# Sets up standard Bang! bits and runs java

BANG_HOME=`dirname $0`
BANG_HOME=`cd $BANG_HOME/.. ; pwd`

umask 002

JAVA_VM="$JAVA_HOME/bin/java"
if [ ! -e $JAVA_VM ]; then
    echo "$0: Cannot find JVM in $JAVA_HOME. Exiting."
    exit 255
fi

# set up our java arguments
JAVA_ARGS="-Dno_unpack_resources=true \
    -Dbang.home=$BANG_HOME \
    -Dresource_dir=$BANG_HOME/rsrc \
    -Drsrc_cache_dir=/tmp"

# extract -D arguments so that we can put them before the classname
while [ ! -z "$1" ]; do
    case "$1" in
        -nodevlibs)
            NODEVLIBS=true
            ;;

        -yjp)
            export LD_LIBRARY_PATH=$HOME/lib/yjp-5.5.2/bin/linux-x86-32
            JAVA_ARGS="-agentlib:yjpagent $JAVA_ARGS"
            JAVA_ARGS="-Dprofiling=true $JAVA_ARGS"
            ;;
            
        -D*)
            JAVA_ARGS="$JAVA_ARGS '$1'"
            ;;

        *)
            ARGS="$ARGS '$1'"
            ;;
    esac
    shift
done

# Some temporary business for multiprocessor FreeBSD machines
NEEDS_MEMBAR=`$JAVA_VM -fullversion 2>&1 | grep diablo`
if [ ! -z "$NEEDS_MEMBAR" ]; then
     JAVA_ARGS="$JAVA_ARGS -XX:+UseMembar"
fi

# add all necessary JAR files and $BANG_HOME to the CLASSPATH
CLASSPATH="$JAVA_HOME/jre/lib/rt.jar"
for JAR in $BANG_HOME/dist/lib/*.jar; do
    # if we're using devlibs and this jar file exists in projects/*/dist; use
    # that one instead of the one in dist/lib
    if [ -z "$NODEVLIBS" ]; then
        JARNAME=$(basename $JAR)
        PROJJAR=$(echo $BANG_HOME/projects/*/dist/$JARNAME)
        if [ -e "$PROJJAR" ]; then
            JAR=$PROJJAR
        fi
    fi
    CLASSPATH=$CLASSPATH:$JAR
done
if [ -z "$NODEVLIBS" -a -d $BANG_HOME/dist/classes ]; then
    CLASSPATH=$BANG_HOME/dist/classes:$CLASSPATH
    CLASSPATH=$BANG_HOME/dist:$CLASSPATH
else
    for JAR in $BANG_HOME/dist/bang-*.jar; do
        # skip the bang-support jar, it duplicates what's in bang-code
        if [ "$JAR" != "$BANG_HOME/dist/bang-support.jar" ]; then
            CLASSPATH=$JAR:$CLASSPATH
        fi
    done
    CLASSPATH=$BANG_HOME:$CLASSPATH
fi
export CLASSPATH

OS=`uname -s`
NATIVE_LIBS=$BANG_HOME/dist/lib/`uname -m`-`uname -s`
if [ "$OS" = "Darwin" ]; then
    # pass -Djava.library.path to locate our shared libraries
    JAVA_ARGS="$JAVA_ARGS -Djava.library.path=$NATIVE_LIBS"
else
    # set up the LD_LIBRARY_PATH to include our shared libraries
    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$NATIVE_LIBS
    export LD_LIBRARY_PATH
fi

# do the deed
eval $JAVA_VM $JAVA_ARGS $ARGS
