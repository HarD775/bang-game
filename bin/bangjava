#!/bin/sh
#
# $Id$
#
# Sets up standard Bang! bits and runs java

BANG_HOME=`dirname $0`
BANG_HOME=`cd $BANG_HOME/.. ; pwd`

umask 002

# set up our java arguments
JAVA_ARGS="-Dno_unpack_resources=true \
    -Dbang.home=$BANG_HOME \
    -Dresource_dir=$BANG_HOME/dist/rsrc \
    -Drsrc_cache_dir=/tmp"

# extract -D arguments so that we can put them before the classname
while [ ! -z "$1" ]; do
    case "$1" in
        -nodevlibs)
            NODEVLIBS=true
            ;;

        -yjp)
            export LD_LIBRARY_PATH=$HOME/lib/yjp-5.5.2/bin/linux-x86-32
            JAVA_ARGS="-agentlib:yjpagent $JAVA_ARGS"
            JAVA_ARGS="-Dprofiling=true $JAVA_ARGS"
            ;;

        -debugger)
            JDWP_ARGS="transport=dt_socket,server=y,address=8000,suspend=n";
            JAVA_ARGS="-agentlib:jdwp=$JDWP_ARGS $JAVA_ARGS"
            ;;

        -client)
            CLIENT="true"
            ;;

        -D*)
            JAVA_ARGS="$JAVA_ARGS $1"
            ;;

        *)
            ARGS="$ARGS $1"
            ;;
    esac
    shift
done

# Some temporary business for multiprocessor FreeBSD machines
NEEDS_MEMBAR=`java -fullversion 2>&1 | grep diablo`
if [ ! -z "$NEEDS_MEMBAR" ]; then
     JAVA_ARGS="$JAVA_ARGS -XX:+UseMembar"
fi

# add all necessary JAR files and $BANG_HOME to the CLASSPATH
CLASSPATH="$BANG_HOME/dist"
if [ -z "$NODEVLIBS" -a -d $BANG_HOME/dist/classes ]; then
    CLASSPATH=$BANG_HOME/dist/classes:$CLASSPATH
else
    for JAR in $BANG_HOME/dist/bang-*.jar; do
        CLASSPATH=$CLASSPATH:$JAR
    done
fi

for JAR in $BANG_HOME/dist/lib/*.jar; do
    CLASSPATH=$CLASSPATH:$JAR
done
if [ "$CLIENT" = "true" ]; then
    for JAR in $BANG_HOME/dist/client/*.jar; do
        CLASSPATH=$CLASSPATH:$JAR
    done
fi
export CLASSPATH

OS=`uname -s | tr '[:upper:]' '[:lower:]'`
if [ "$OS" = "darwin" ]; then
    OS="macosx"
fi
# pass -Djava.library.path to locate our shared libraries
JAVA_ARGS="$JAVA_ARGS -Djava.library.path=$BANG_HOME/dist/lib/$OS"

# do the deed
exec java $JAVA_ARGS $ARGS
