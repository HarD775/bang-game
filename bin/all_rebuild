#!/bin/sh
#
# $Id$
#
# Updates the various libraries from the version control repository and
# rebuilds everything used by the Bang! client, server and editor.

if [ "`whoami`" = "root" ]; then
    echo "Don't run this script as root."
    exit 255
fi

ROOT=`dirname $0`
ROOT=`cd $ROOT ; cd .. ; pwd`
LOCKFILE=/tmp/rebuild-bang.lock
ANT_OPTS=-mx128M
export JAVA_HOME=/usr/local/jdk1.5

# load up some handy shell functions
. /export/tools/lib/sh/build_helper

# make sure directories are created sanely
umask 002

# "parse" our arguments
while [ ! -z "$1" ]; do
    if [ $1 = "--update" ]; then
        UPDATE=true
    fi
    if [ $1 = "--client" ]; then
        CLIENT=true
    fi
    if [ $1 = "--devclient" ]; then
        DEVCLIENT=true
    fi
    if [ $1 = "--revdate" ]; then
        REVDATE="-r {$2}"
        shift
    fi
    shift
done

# make sure we only have one script running at a time
lockfile -r 0 $LOCKFILE
if [ $? != 0 ] ; then
    echo "Refusing to run because lockfile ($LOCKFILE) exists."
    echo "Ensure no stale script is running, delete the file and rerun."
    exit 255
fi

# bookkeeping
echo "*** Starting build in $ROOT at" `date`

if [ ! -z "$UPDATE" ]; then
    # update the whole enchilada
    echo "Updating main tree..."
    cd $ROOT
    svn update -q $REVDATE
    if [ $? != 0 ] ; then
        echo >&2 "*** svn update failed in" `pwd`
        rm -f $LOCKFILE
        exit 255
    fi
fi

# rebuild our libraries
build_libraries samskivert getdown jme-bui narya threerings

# run proguard on getdown
cd $ROOT/projects/getdown
$ANT proguard
if [ $? != 0 ]; then
    rm -f $LOCKFILE
    exit 255
fi

# build the main thang
cd $ROOT
$ANT distclean dist mdist
if [ $? != 0 ]; then
    rm -f $LOCKFILE
    exit 255
fi

# build the production client if requested
if [ ! -z "$CLIENT" ]; then
    # update the build version as we're building the production client
    BUILD_VERSION=`/export/tools/bin/buildstamp`
    echo "Updating build version to $BUILD_VERSION"
    echo "version=$BUILD_VERSION" > $ROOT/build.properties
    echo "config_version=$BUILD_VERSION" >> $ROOT/build.properties

    cd $ROOT
    $ANT models client
    if [ $? != 0 ]; then
        rm -f $LOCKFILE
        exit 255
    fi

    # make our Proguard mapping file accessible to Hemiptera
    cp $ROOT/etc/proguard/$BUILD_VERSION.map \
        $ROOT/../threerings/etc/proguard/bang

    cd $ROOT/projects/installers
    $ANT client
fi

# build the development client if requested
if [ ! -z "$DEVCLIENT" ]; then
    cd $ROOT
    $ANT models devclient
    cd $ROOT/projects/installers
    $ANT devclient

    # make our Proguard mapping file accessible to Hemiptera
    cp $ROOT/etc/proguard/0.map $ROOT/../threerings/etc/proguard/bang

    # update our unit damage table
    $ROOT/bin/bangtool com.threerings.bang.game.tools.PrintDamageTable \
        frontier_town > $ROOT/pages/units.html
fi

# remove the lockfile
rm -f $LOCKFILE

echo "*** Finished build at" `date`
