#!/usr/bin/perl -w
#
# $Id$
#
# Grinds logs for a particular day. (Note: awtstats does not support
# grinding logs out of order, so if you plan on regrinding any particular
# day's logs, you have to clear out its cached data and start over at the
# beginning of the month).

my $usage = "Usage: $0 [year month day (ie. 2002 05 08)]\n";
my $site = "bang";

my $year = shift;
my $month;
my $day;

# if they specified a date, use it
if (defined $year) {
    $month = shift or die $usage;
    $day = shift or die $usage;
} else {
    # otherwise, use yesterday's date
    my @info = localtime(time-24*60*60);
    $year = $info[5] + 1900;
    $month = $info[4] + 1;
    $day = $info[3];
}

my $datedir = sprintf("%04d/%02d/%02d", $year, $month, $day);
my $datesuf = sprintf("%04d%02d%02d", $year, $month, $day);

# figure out where we are
my $root = `dirname $0`;
chomp($root);
$root .= "/..";

my $awstats = "/usr/lib/cgi-bin/awstats.pl";
my $logmerge = "/usr/bin/mergelog";
my $logs = "$root/logs/$datedir/access-$site-*.log";

my @globs = glob("$root/logs/$datedir/access-$site-*.log");
if (@globs == 0) {
    $logmerge = "/usr/bin/zmergelog";
    $logs = "$root/logs/$datedir/access-$site-*.log.gz";
}

# combine the logs for this day together
system("$logmerge $logs 2>/dev/null > $root/logs/access-$site.log");

# and process 'em
system("$awstats -config=$site -update");

# also run the error response summarizer
my $tmpfile = "/tmp/rcodestats.txt";
system("/export/tools/bin/rcodestats $root/logs/access-$site.log > $tmpfile");
if (! -z $tmpfile) {
    system("mail -s \"LOG $site HTTP errors\" " .
           "bang-logs\@threerings.net < $tmpfile");
}
unlink($tmpfile);

# clean up after ourselves
unlink("$root/logs/access-$site.log");
